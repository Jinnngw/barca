import asyncio
import random
from typing import AsyncGenerator


class MockLLM:
    async def stream_generate(self, text: str, character_id: str = "harrypotter") -> AsyncGenerator[str, None]:
        # Generate character-specific responses
        text_lower = text.lower().strip()
        
        # Character-specific response mapping
        character_responses = {
            "harrypotter": self._get_harry_responses(text_lower),
            "marie-curie": self._get_marie_responses(text_lower),
            "einstein": self._get_einstein_responses(text_lower),
            "confucius": self._get_confucius_responses(text_lower),
            "shakespeare": self._get_shakespeare_responses(text_lower),
            "socrates": self._get_socrates_responses(text_lower),
            "default": self._get_default_responses(text_lower)
        }
        
        # Get responses for the character
        responses = character_responses.get(character_id, character_responses["default"])
        
        # Select a random response
        response = random.choice(responses)
        
        # Stream the response character by character
        for ch in response:
            yield ch
            await asyncio.sleep(0.01)  # Slightly slower for better effect
    
    def _get_harry_responses(self, text_lower: str) -> list:
        """Harry Potter specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是哈利·波特，很高兴见到你！",
                "嗨！欢迎来到魔法世界！",
                "你好！有什么我可以帮助你的吗？",
                "很高兴见到你！我是哈利·波特。"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower):
            return [
                "我是哈利·波特！霍格沃茨的学生。",
                "我叫哈利·波特，是个巫师。",
                "我是哈利·詹姆·波特，大家都叫我哈利。",
                "哈利·波特，霍格沃茨格兰芬多学院的学生。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我现在17岁了！刚刚成年，可以学习更高级的魔法了。",
                "我17岁，在霍格沃茨七年级。",
                "17岁！终于可以不用监护人的许可了。",
                "我今年17岁，正在准备NEWT考试。"
            ]
        # 4. 朋友询问
        elif any(word in text_lower for word in ["朋友", "罗恩", "赫敏", "伙伴", "同学", "最好的朋友"]):
            return [
                "罗恩和赫敏是我最好的朋友！我们一起经历了很多冒险。",
                "我很幸运有罗恩和赫敏这样的朋友。",
                "罗恩、赫敏和我是铁三角！",
                "我的朋友罗恩很搞笑，赫敏很聪明。",
                "罗恩·韦斯莱是我最好的朋友，我们住在同一个宿舍。",
                "赫敏·格兰杰是我见过最聪明的女巫，她帮助了我们很多。"
            ]
        # 5. 父母家庭
        elif any(word in text_lower for word in ["父母", "爸爸", "妈妈", "家人", "家庭", "父亲", "母亲"]):
            return [
                "我的父母是詹姆和莉莉·波特，他们在我小时候就去世了。",
                "我很想念我的父母，他们为了保护我牺牲了。",
                "我的父母都是巫师，爸爸詹姆和妈妈莉莉都很勇敢。",
                "虽然我从小失去父母，但在霍格沃茨找到了新的家人。",
                "我的父亲詹姆·波特是格兰芬多学院的魁地奇队长。",
                "我的母亲莉莉·波特是最聪明的女巫之一。"
            ]
        # 6. 魔法相关
        elif any(word in text_lower for word in ["魔法", "咒语", "巫师", "霍格沃茨", "魔杖", "法术"]):
            return [
                "魔法真的很神奇！我最喜欢的是呼神护卫咒。",
                "霍格沃茨是最好的魔法学校！",
                "魔杖选择巫师，这是很重要的。",
                "魔法需要练习和专注，就像学习一样。",
                "我最擅长的咒语是呼神护卫，它救过我们很多次。",
                "在霍格沃茨，我们学习各种魔法，从变形术到魔药学。"
            ]
        # 7. 学校课程
        elif any(word in text_lower for word in ["学校", "课程", "课", "老师", "教授", "学习", "考试", "NEWT"]):
            return [
                "霍格沃茨有很多有趣的课程，我最喜欢黑魔法防御术。",
                "斯内普教授的魔药课很有挑战性，但他的课很重要。",
                "麦格教授的变形术课很有趣，虽然很难。",
                "我们有很多作业要做，特别是赫敏，她总是第一个完成。",
                "NEWT考试快到了，大家都在努力学习。",
                "黑魔法防御术是我最擅长的科目。"
            ]
        # 8. 魁地奇
        elif any(word in text_lower for word in ["魁地奇", "金色飞贼", "扫帚", "比赛", "运动", "找球手"]):
            return [
                "魁地奇是我最喜欢的运动！我是格兰芬多队的找球手。",
                "我有一把光轮2000，虽然现在有点旧了。",
                "我们正在准备下一场魁地奇比赛，希望能赢斯莱特林。",
                "金色飞贼很难抓到，但这就是找球手的职责。",
                "我在一年级就成为了格兰芬多的找球手。",
                "魁地奇比赛总是很激烈，但我喜欢那种感觉。"
            ]
        # 9. 伏地魔相关
        elif any(word in text_lower for word in ["伏地魔", "黑魔王", "神秘人", "黑暗", "危险", "食死徒"]):
            return [
                "伏地魔是个非常危险的黑巫师，我们必须阻止他。",
                "我们不能说出他的名字，这太危险了。",
                "黑暗势力正在崛起，我们需要做好准备。",
                "邓布利多教授在帮助我们对抗黑暗势力。",
                "我的额头上有闪电疤痕，那是伏地魔留下的。",
                "我们必须团结起来对抗邪恶。"
            ]
        # 10. 今天活动
        elif any(word in text_lower for word in ["今天", "今天都", "今天干了", "今天做什么", "今天干嘛", "今天忙什么", "今天怎么样", "都干啥了", "都干了什么", "做了什么", "干嘛了", "干什么了", "忙什么了"]):
            return [
                "今天上了变形术课，麦格教授教我们如何把老鼠变成茶杯。",
                "今天和罗恩、赫敏在图书馆学习，准备下周的魔药课考试。",
                "今天参加了魁地奇训练，伍德队长说我们需要加强配合。",
                "今天在禁林附近练习了呼神护卫咒，卢平教授说我进步很大。",
                "今天和赫敏讨论了黑魔法防御术的作业，她真的很聪明。",
                "今天在公共休息室里和罗恩下巫师棋，他赢了我三局。"
            ]
        # 11. 一般活动询问
        elif any(word in text_lower for word in ["干嘛", "做什么", "在做什么", "干什么", "忙什么"]):
            return [
                "我正在霍格沃茨学习魔法！今天学了新的咒语。",
                "我刚从魁地奇训练回来，准备去图书馆学习。",
                "我在和罗恩、赫敏讨论今天的课程。",
                "正在练习新的防御术咒语。",
                "我在准备黑魔法防御术的考试。",
                "正在和朋友们讨论如何对付黑暗势力。"
            ]
        # 12. 宠物相关
        elif any(word in text_lower for word in ["宠物", "猫头鹰", "海德薇", "动物"]):
            return [
                "我有一只雪鸮叫海德薇，她是我最好的伙伴。",
                "海德薇帮我送信，她是一只很聪明的猫头鹰。",
                "我的宠物是海德薇，她总是很准时。",
                "海德薇不仅是我的宠物，更是我的朋友。"
            ]
        # 13. 宿舍相关
        elif any(word in text_lower for word in ["宿舍", "房间", "住宿", "睡觉", "休息"]):
            return [
                "我住在格兰芬多的男生宿舍，和罗恩是室友。",
                "格兰芬多的宿舍很舒适，红色和金色是我们的代表色。",
                "我们的宿舍在塔楼里，可以看到美丽的风景。",
                "公共休息室是我们放松和讨论的地方。"
            ]
        # 14. 食物相关
        elif any(word in text_lower for word in ["食物", "吃饭", "晚餐", "午餐", "早餐", "餐厅"]):
            return [
                "霍格沃茨的大厅总是有很多美味的食物！",
                "我最喜欢的是黄油啤酒和巧克力蛙。",
                "我们在大厅里用餐，天花板会显示天空。",
                "家养小精灵们做的食物总是很美味。"
            ]
        # 15. 冒险经历
        elif any(word in text_lower for word in ["冒险", "经历", "故事", "发生", "遇到"]):
            return [
                "我们在霍格沃茨经历了很多冒险！",
                "有一次我们闯进了禁止进入的走廊。",
                "我和罗恩、赫敏一起解决了很多难题。",
                "禁林里总是有很多神秘的东西。",
                "我们曾经和巨魔战斗过。"
            ]
        # 16. 能力技能
        elif any(word in text_lower for word in ["能力", "技能", "擅长", "会什么", "本领"]):
            return [
                "我最擅长黑魔法防御术和魁地奇。",
                "我会使用呼神护卫咒，这很困难但很重要。",
                "我在飞行方面很有天赋，这可能遗传自我的父亲。",
                "虽然我在魔药学方面不如赫敏，但我很努力。"
            ]
        # 17. 梦想愿望
        elif any(word in text_lower for word in ["梦想", "愿望", "想要", "希望", "未来"]):
            return [
                "我希望成为一名傲罗，专门对付黑巫师。",
                "我的梦想是保护魔法世界的和平。",
                "我希望能够和朋友们永远在一起。",
                "我想要变得更强大，保护我爱的人。"
            ]
        # 18. 恐惧担心
        elif any(word in text_lower for word in ["害怕", "恐惧", "担心", "担心", "害怕"]):
            return [
                "我害怕失去我的朋友和亲人。",
                "有时候我会担心伏地魔的威胁。",
                "我害怕让关心我的人失望。",
                "虽然害怕，但我必须勇敢面对。"
            ]
        # 19. 老师教授
        elif any(word in text_lower for word in ["邓布利多", "麦格", "斯内普", "卢平", "海格"]):
            return [
                "邓布利多教授是最伟大的巫师，他教会了我很多。",
                "麦格教授很严格，但她是很好的老师。",
                "斯内普教授虽然对我很苛刻，但他的魔药学很重要。",
                "卢平教授教了我很多防御术的知识。",
                "海格是我最忠实的朋友，他总是在我需要时帮助我。"
            ]
        # 20. 学院相关
        elif any(word in text_lower for word in ["格兰芬多", "学院", "分院", "帽子"]):
            return [
                "我是格兰芬多学院的学生，我们以勇敢著称。",
                "分院帽把我分到了格兰芬多，这是最适合我的地方。",
                "格兰芬多的代表色是红色和金色，代表勇气。",
                "我们学院有很多伟大的巫师，包括我的父母。"
            ]
        # 21. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "嗯，这确实很有趣！",
                "根据我在霍格沃茨的经验...",
                "这让我想起了我们的冒险经历。",
                "这让我想起了邓布利多教授说过的话...",
                "根据我的观察，这确实很复杂。"
            ]
        # 22. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "勇敢", "了不起"]):
            return [
                "谢谢你的夸奖！这让我想起了邓布利多教授的话。",
                "过奖了，我只是做了我应该做的事。",
                "谢谢！这让我想起了我们的团队合作。",
                "这要归功于我的朋友们，没有他们我做不到。"
            ]
        # 23. 时间相关
        elif any(word in text_lower for word in ["时间", "时候", "什么时候", "多久", "何时"]):
            return [
                "在魔法世界，时间总是过得很特别。",
                "我们有很多时间魔法，但很危险。",
                "在霍格沃茨，每一天都很充实。",
                "时间转换器可以让我们回到过去，但要小心使用。"
            ]
        # 24. 地点相关
        elif any(word in text_lower for word in ["哪里", "地方", "地点", "位置", "在哪"]):
            return [
                "霍格沃茨是世界上最安全的地方之一。",
                "对角巷是魔法世界的购物中心。",
                "禁林很危险，但也有很多神奇生物。",
                "九又四分之三站台连接着两个世界。"
            ]
        # 25. 默认回复
        else:
            return [
                "这让我想起了在霍格沃茨的冒险！",
                "魔法世界总是充满惊喜！",
                "作为一个巫师，我觉得这很有趣！",
                "这让我想起了邓布利多教授说过的话。",
                "在霍格沃茨，我们总是会遇到意想不到的事情。",
                "这确实是个值得思考的问题。"
            ]
    
    def _get_marie_responses(self, text_lower: str) -> list:
        """Marie Curie specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是玛丽·居里，很高兴见到你！",
                "你好！我是第一个获得诺贝尔奖的女性科学家。",
                "很高兴认识你！我正在研究放射性元素。",
                "你好！科学的世界总是充满发现！"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower and "父亲" not in text_lower):
            return [
                "我是玛丽·居里，物理学家和化学家。",
                "我叫玛丽·斯克沃多夫斯卡-居里。",
                "我是第一个获得诺贝尔奖的女性。",
                "玛丽·居里，我发现了镭和钋元素。",
                "我是波兰出生的法国科学家。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我出生于1867年，今年已经67岁了。",
                "我已经是个老人了，但对科学的热爱从未减退。",
                "年龄只是数字，重要的是保持对知识的渴望。",
                "我67岁了，但每天还在实验室工作。"
            ]
        # 4. 父亲相关
        elif any(word in text_lower for word in ["父亲", "爸爸", "爸爸是谁", "你的父亲", "父亲是谁"]):
            return [
                "我的父亲是瓦迪斯瓦夫·斯克沃多夫斯基，他是一名数学和物理教师。",
                "我的父亲教会了我数学和科学的基础知识。",
                "瓦迪斯瓦夫·斯克沃多夫斯基是我的父亲，他鼓励我学习。",
                "我的父亲虽然收入微薄，但非常重视教育。"
            ]
        # 5. 母亲相关
        elif any(word in text_lower for word in ["母亲", "妈妈", "妈妈是谁", "你的母亲", "母亲是谁"]):
            return [
                "我的母亲是布罗尼斯瓦娃·斯克沃多夫斯卡，她是一名教师。",
                "我的母亲教会了我波兰语和文学。",
                "布罗尼斯瓦娃·斯克沃多夫斯卡是我的母亲，她很有教养。",
                "我的母亲在我很小的时候就去世了，肺结核夺走了她的生命。"
            ]
        # 6. 家庭相关
        elif any(word in text_lower for word in ["家庭", "家人", "兄弟姐妹", "姐妹", "兄弟"]):
            return [
                "我有三个姐妹和一个兄弟，我是最小的。",
                "我的姐姐布罗尼斯瓦娃帮助我来到巴黎学习。",
                "我的家庭很重视教育，我们都努力学习。",
                "我们家虽然不富裕，但充满了学习的氛围。"
            ]
        # 7. 丈夫相关
        elif any(word in text_lower for word in ["丈夫", "老公", "皮埃尔", "伴侣", "配偶"]):
            return [
                "我的丈夫皮埃尔·居里是我最亲密的研究伙伴。",
                "皮埃尔·居里和我一起发现了镭和钋元素。",
                "我们不仅是夫妻，更是科学上的合作伙伴。",
                "皮埃尔在1906年因车祸去世，这对我是巨大的打击。",
                "没有皮埃尔，我无法完成这些伟大的发现。"
            ]
        # 8. 孩子相关
        elif any(word in text_lower for word in ["孩子", "女儿", "儿子", "伊雷娜", "夏娃"]):
            return [
                "我有两个女儿，伊雷娜和夏娃。",
                "我的大女儿伊雷娜也成为了科学家，获得了诺贝尔化学奖。",
                "我的小女儿夏娃成为了作家和记者。",
                "我努力在科学工作和家庭之间找到平衡。"
            ]
        # 9. 放射性研究
        elif any(word in text_lower for word in ["放射性", "辐射", "放射", "射线"]):
            return [
                "放射性是原子核自发衰变的现象。",
                "我发现了放射性元素镭和钋。",
                "放射性研究改变了我们对物质的认识。",
                "辐射可以用于医疗，但也要小心其危险性。"
            ]
        # 10. 镭元素
        elif any(word in text_lower for word in ["镭", "镭元素", "镭盐"]):
            return [
                "镭是我发现的最重要的元素之一。",
                "发现镭元素花了四年时间，需要处理数吨沥青铀矿。",
                "镭在黑暗中会发光，这很神奇。",
                "镭可以用于治疗癌症，这是医学上的重大突破。"
            ]
        # 11. 钋元素
        elif any(word in text_lower for word in ["钋", "钋元素"]):
            return [
                "钋是我以祖国波兰命名的元素。",
                "钋和镭一起被发现，都是放射性元素。",
                "钋的放射性很强，需要特别小心处理。",
                "我为我的祖国波兰发现了钋元素。"
            ]
        # 12. 诺贝尔奖
        elif any(word in text_lower for word in ["诺贝尔奖", "奖项", "荣誉", "成就", "认可"]):
            return [
                "我获得了两次诺贝尔奖，这在历史上是独一无二的。",
                "1903年获得诺贝尔物理学奖，1911年获得诺贝尔化学奖。",
                "我是第一个获得诺贝尔奖的女性。",
                "诺贝尔奖是对我们科学工作的认可。"
            ]
        # 13. 科学研究
        elif any(word in text_lower for word in ["科学", "研究", "实验", "理论", "发现"]):
            return [
                "科学需要耐心和坚持！我发现镭元素花了四年时间。",
                "科学没有国界，知识属于全人类。",
                "科学研究需要严谨的态度和坚持不懈的努力。",
                "每一个发现都是建立在前人基础上的。"
            ]
        # 14. 实验室工作
        elif any(word in text_lower for word in ["工作", "研究", "实验室", "实验", "每天"]):
            return [
                "我每天都在实验室里研究放射性元素。",
                "我正在分析镭的化学性质。",
                "实验室就是我的第二个家。",
                "我和丈夫皮埃尔一起工作，我们是最好的搭档。",
                "实验工作需要极大的耐心和细心。"
            ]
        # 15. 波兰背景
        elif any(word in text_lower for word in ["波兰", "祖国", "华沙", "故乡", "出生"]):
            return [
                "我出生于波兰华沙，那里是我的故乡。",
                "我以祖国波兰命名了钋元素。",
                "波兰当时被俄国占领，女性无法接受高等教育。",
                "我来到巴黎是为了追求科学梦想。"
            ]
        # 16. 巴黎生活
        elif any(word in text_lower for word in ["巴黎", "法国", "索邦", "大学", "留学"]):
            return [
                "我在巴黎索邦大学学习物理学和数学。",
                "巴黎给了我追求科学梦想的机会。",
                "在巴黎，我遇到了我的丈夫皮埃尔·居里。",
                "法国成为了我的第二故乡。"
            ]
        # 17. 教育经历
        elif any(word in text_lower for word in ["教育", "学习", "学校", "大学", "老师"]):
            return [
                "我在华沙的公立学校接受了基础教育。",
                "后来我在索邦大学学习物理学。",
                "教育对女性来说非常重要。",
                "我相信知识可以改变命运。"
            ]
        # 18. 女性科学家
        elif any(word in text_lower for word in ["女性", "女科学家", "性别", "平等", "权利"]):
            return [
                "我相信女性的智慧不亚于男性。",
                "我是第一个获得诺贝尔奖的女性科学家。",
                "女性也应该有接受高等教育的权利。",
                "性别不应该成为追求科学的障碍。"
            ]
        # 19. 健康影响
        elif any(word in text_lower for word in ["健康", "疾病", "辐射", "危险", "安全"]):
            return [
                "长期接触放射性物质对我的健康造成了影响。",
                "我在1934年死于再生障碍性贫血。",
                "当时我们不知道辐射的危险性。",
                "现在我们知道要更加小心地处理放射性物质。"
            ]
        # 20. 医学应用
        elif any(word in text_lower for word in ["医学", "治疗", "癌症", "医疗", "应用"]):
            return [
                "镭可以用于治疗癌症，这是医学上的重大突破。",
                "放射治疗挽救了很多人的生命。",
                "我的研究为现代医学做出了重要贡献。",
                "科学应该用于造福人类。"
            ]
        # 21. 经济困难
        elif any(word in text_lower for word in ["经济", "困难", "贫穷", "生活", "条件"]):
            return [
                "我的学生时代经济很困难，经常挨饿。",
                "我靠做家教来维持生活。",
                "即使生活困难，我也要坚持学习。",
                "贫困不能阻止我追求知识。"
            ]
        # 22. 国际合作
        elif any(word in text_lower for word in ["国际", "合作", "交流", "分享", "开放"]):
            return [
                "科学没有国界，知识属于全人类。",
                "我愿意与全世界的科学家分享我的发现。",
                "国际合作对科学发展很重要。",
                "科学应该为全人类服务。"
            ]
        # 23. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "根据我的研究经验，这确实很有趣！",
                "这让我想起了我的放射性研究...",
                "从科学角度来看，这个问题很有意义。",
                "让我用科学的方法来分析这个问题。"
            ]
        # 24. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "伟大", "了不起"]):
            return [
                "谢谢你的夸奖！但我只是大自然的谦卑学生。",
                "过奖了，我只是在探索科学的奥秘。",
                "真正的伟大属于科学本身。",
                "科学是集体的事业，不是我一个人的成就。"
            ]
        # 25. 默认回复
        else:
            return [
                "科学探索永无止境！",
                "知识就是力量！",
                "我相信女性的智慧不亚于男性。",
                "发现真理需要勇气和毅力。",
                "科学没有国界，知识属于全人类。",
                "每一个发现都是建立在前人基础上的。"
            ]
    
    def _get_einstein_responses(self, text_lower: str) -> list:
        """Einstein specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是阿尔伯特·爱因斯坦，很高兴见到你！",
                "你好！我是那个发现相对论的物理学家。",
                "很高兴认识你！让我们一起探索宇宙的奥秘。",
                "你好！科学的世界总是充满惊奇！"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower and "父亲" not in text_lower):
            return [
                "我是阿尔伯特·爱因斯坦，理论物理学家。",
                "我叫爱因斯坦，我提出了相对论。",
                "我是那个发明了E=mc²公式的人。",
                "爱因斯坦，我对宇宙充满好奇。",
                "我是20世纪最伟大的物理学家之一。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我出生于1879年，今年已经76岁了。",
                "我已经是个老人了，但对科学的热爱从未减退。",
                "年龄只是一个数字，重要的是保持好奇心。",
                "我76岁了，但每天都在思考新的物理问题。"
            ]
        # 4. 父亲相关
        elif any(word in text_lower for word in ["父亲", "爸爸", "爸爸是谁", "你的父亲", "父亲是谁"]):
            return [
                "我的父亲是赫尔曼·爱因斯坦，他是一名工程师和商人。",
                "我的父亲赫尔曼经营着一家电气公司。",
                "我的父亲鼓励我学习数学和科学。",
                "赫尔曼·爱因斯坦是我的父亲，他教会了我很多。",
                "我的父亲虽然不理解我的理论，但他支持我的研究。"
            ]
        # 5. 母亲相关
        elif any(word in text_lower for word in ["母亲", "妈妈", "妈妈是谁", "你的母亲", "母亲是谁"]):
            return [
                "我的母亲是保利娜·爱因斯坦，她是一位音乐家。",
                "我的母亲教会了我钢琴，音乐和科学都很重要。",
                "保利娜·爱因斯坦是我的母亲，她很聪明。",
                "我的母亲支持我的教育，即使家庭经济困难。"
            ]
        # 6. 家庭相关
        elif any(word in text_lower for word in ["家庭", "家人", "兄弟姐妹", "兄弟姐妹"]):
            return [
                "我有一个妹妹叫玛雅，她后来也成为了物理学家。",
                "我的家庭很普通，但都支持我的学习。",
                "我的妹妹玛雅是我最好的朋友之一。",
                "我们家虽然不富裕，但充满了爱和支持。"
            ]
        # 7. 相对论相关
        elif any(word in text_lower for word in ["相对论", "狭义相对论", "广义相对论", "时空", "弯曲"]):
            return [
                "相对论改变了我们对时间和空间的理解。",
                "时间是相对的，空间是弯曲的。",
                "广义相对论解释了引力如何弯曲时空。",
                "狭义相对论告诉我们光速是宇宙中的常数。",
                "我的相对论理论是物理学史上最重要的发现之一。"
            ]
        # 8. 质能方程
        elif any(word in text_lower for word in ["E=mc²", "质能方程", "质量", "能量", "原子弹"]):
            return [
                "E=mc²是我最著名的公式，它揭示了质量和能量的关系。",
                "质能方程E=mc²改变了世界。",
                "这个公式解释了为什么原子弹有如此巨大的能量。",
                "E=mc²告诉我们，很少的质量可以产生巨大的能量。"
            ]
        # 9. 光速相关
        elif any(word in text_lower for word in ["光速", "光", "速度", "极限"]):
            return [
                "光速是宇宙中的常数，约为每秒30万公里。",
                "没有什么能比光更快，这是宇宙的基本定律。",
                "光速不变原理是相对论的基石。",
                "当我们接近光速时，时间会变慢。"
            ]
        # 10. 时间相关
        elif any(word in text_lower for word in ["时间", "时间旅行", "时空", "过去", "未来"]):
            return [
                "时间是相对的，不是绝对的。",
                "时间旅行在理论上可能，但需要巨大的能量。",
                "在高速运动中，时间会变慢。",
                "时间是我们感知的第四维度。"
            ]
        # 11. 宇宙相关
        elif any(word in text_lower for word in ["宇宙", "宇宙学", "大爆炸", "星系", "黑洞"]):
            return [
                "宇宙中最不可理解的是它居然可以被理解。",
                "我们的宇宙是有限的但无界的。",
                "黑洞是时空中的奇点，连光都无法逃脱。",
                "宇宙正在膨胀，这是最令人震惊的发现。"
            ]
        # 12. 科学方法
        elif any(word in text_lower for word in ["科学", "科学方法", "实验", "理论", "假设"]):
            return [
                "科学就是不断质疑和探索的过程。",
                "想象力比知识更重要！",
                "一个理论如果不能被实验验证，就不是好理论。",
                "科学需要逻辑思维，更需要创造力。"
            ]
        # 13. 教育学习
        elif any(word in text_lower for word in ["教育", "学习", "学校", "大学", "老师"]):
            return [
                "我从不教我的学生，我只是努力为他们创造条件去学习。",
                "教育不是填鸭式灌输，而是启发思考。",
                "真正的学习来自于好奇心和探索精神。",
                "我在苏黎世理工学院接受了我的教育。"
            ]
        # 14. 数学相关
        elif any(word in text_lower for word in ["数学", "方程式", "计算", "几何", "代数"]):
            return [
                "数学是宇宙的语言，上帝用数学创造了世界。",
                "我的理论需要复杂的数学来描述。",
                "数学是物理学的工具，也是探索真理的途径。",
                "没有数学，我们就无法理解宇宙的奥秘。"
            ]
        # 15. 哲学思考
        elif any(word in text_lower for word in ["哲学", "思考", "智慧", "真理", "存在"]):
            return [
                "哲学和科学是探索真理的两个途径。",
                "重要的不是停止提问，而是保持好奇心。",
                "真正的智慧在于知道自己的无知。",
                "我们永远无法完全理解宇宙，但我们可以不断接近真理。"
            ]
        # 16. 宗教信仰
        elif any(word in text_lower for word in ["宗教", "上帝", "信仰", "神", "造物主"]):
            return [
                "我相信斯宾诺莎的上帝，即宇宙本身。",
                "上帝不掷骰子，但宇宙比我们想象的更复杂。",
                "科学与宗教可以和谐共存。",
                "我相信宇宙是有秩序的，这种秩序来自更高的智慧。"
            ]
        # 17. 和平主义
        elif any(word in text_lower for word in ["和平", "战争", "原子弹", "武器", "反战"]):
            return [
                "我后悔参与了原子弹的研发，科学应该用于和平。",
                "战争是人类最大的悲剧。",
                "我们应该用科学来造福人类，而不是毁灭。",
                "和平比任何科学发现都更重要。"
            ]
        # 18. 音乐爱好
        elif any(word in text_lower for word in ["音乐", "小提琴", "钢琴", "演奏", "艺术"]):
            return [
                "音乐是我最大的爱好之一，我每天都会拉小提琴。",
                "如果没有音乐，我的生活将失去很多色彩。",
                "音乐和物理学都需要对和谐的理解。",
                "我的母亲教会了我钢琴，这影响了我的一生。"
            ]
        # 19. 工作研究
        elif any(word in text_lower for word in ["工作", "研究", "实验室", "论文", "发表"]):
            return [
                "我每天的工作就是思考宇宙的奥秘。",
                "我的奇迹年是1905年，那一年我发表了多篇重要论文。",
                "我在专利局工作过，那段时间我思考了很多物理问题。",
                "研究工作需要耐心和坚持。"
            ]
        # 20. 诺贝尔奖
        elif any(word in text_lower for word in ["诺贝尔奖", "奖项", "荣誉", "成就", "认可"]):
            return [
                "我获得了1921年的诺贝尔物理学奖，因为我对光电效应的解释。",
                "诺贝尔奖是对我工作的认可，但科学本身就是最大的奖励。",
                "我因光电效应获得诺贝尔奖，而不是相对论。",
                "奖项不重要，重要的是对科学的贡献。"
            ]
        # 21. 国籍身份
        elif any(word in text_lower for word in ["德国", "瑞士", "美国", "国籍", "祖国"]):
            return [
                "我出生于德国，后来成为瑞士公民，最后移居美国。",
                "我是德国的犹太人，这影响了我的命运。",
                "我在瑞士接受了教育，那里是我科学事业的起点。",
                "我最终定居在美国，在那里度过了我的晚年。"
            ]
        # 22. 名言警句
        elif any(word in text_lower for word in ["名言", "说过", "说过的话", "格言", "座右铭"]):
            return [
                "想象力比知识更重要！",
                "逻辑会把你从A带到B，想象力会带你去任何地方。",
                "疯狂就是一遍又一遍地做同样的事情，却期望不同的结果。",
                "重要的不是停止提问，而是保持好奇心。"
            ]
        # 23. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "根据我的研究，这确实很有趣！",
                "这让我想起了我的相对论理论...",
                "从物理学角度来看，这个问题很有深度。",
                "让我用科学的方法来分析这个问题。"
            ]
        # 24. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "伟大", "了不起"]):
            return [
                "谢谢你的夸奖！但我只是大自然的谦卑学生。",
                "过奖了，我只是在探索宇宙的奥秘。",
                "真正的伟大属于宇宙本身，我们只是在学习。",
                "科学是集体的事业，不是我一个人的成就。"
            ]
        # 25. 默认回复
        else:
            return [
                "想象力比知识更重要！",
                "逻辑会把你从A带到B，想象力会带你去任何地方。",
                "我从不教我的学生，我只是努力为他们创造条件去学习。",
                "疯狂就是一遍又一遍地做同样的事情，却期望不同的结果。",
                "重要的不是停止提问，而是保持好奇心。",
                "宇宙中最不可理解的是它居然可以被理解。"
            ]
    
    def _get_confucius_responses(self, text_lower: str) -> list:
        """Confucius specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是孔子，很高兴见到你！",
                "你好！我是儒家学说的创始人。",
                "很高兴认识你！让我们一起学习修身之道。",
                "你好！教育是人生最重要的事情。"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower and "父亲" not in text_lower):
            return [
                "我是孔子，字仲尼，鲁国人。",
                "人们称我为孔夫子。",
                "我是儒家学说的创始人。",
                "孔子，我一生致力于教育和修身。",
                "我是春秋时期的思想家和教育家。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我出生于公元前551年，今年已经73岁了。",
                "我已经是古稀之年，但对教育的热情从未减退。",
                "年龄只是数字，重要的是保持学习的热情。",
                "我73岁了，但每天都在思考如何完善道德。"
            ]
        # 4. 父亲相关
        elif any(word in text_lower for word in ["父亲", "爸爸", "爸爸是谁", "你的父亲", "父亲是谁"]):
            return [
                "我的父亲是叔梁纥，他是鲁国的大夫。",
                "我的父亲教会了我做人的道理。",
                "叔梁纥是我的父亲，他很有德行。",
                "我的父亲虽然早逝，但他影响了我的一生。"
            ]
        # 5. 母亲相关
        elif any(word in text_lower for word in ["母亲", "妈妈", "妈妈是谁", "你的母亲", "母亲是谁"]):
            return [
                "我的母亲是颜徵在，她是一位贤惠的女子。",
                "我的母亲独自抚养我长大，很不容易。",
                "颜徵在是我的母亲，她教会了我仁爱。",
                "我的母亲是我的第一位老师。"
            ]
        # 6. 家庭相关
        elif any(word in text_lower for word in ["家庭", "家人", "兄弟姐妹", "兄弟"]):
            return [
                "我有一个哥哥叫孟皮，还有一个妹妹。",
                "我的家庭很重视教育和德行。",
                "我的哥哥孟皮身体不好，我从小就很关心他。",
                "我们家虽然不富裕，但都很重视道德修养。"
            ]
        # 7. 教育理念
        elif any(word in text_lower for word in ["教育", "教学", "老师", "学生", "学习"]):
            return [
                "有教无类，人人都应该接受教育。",
                "因材施教，要根据学生的特点来教学。",
                "温故而知新，可以为师矣。",
                "学而时习之，不亦说乎？",
                "三人行，必有我师焉。"
            ]
        # 8. 仁爱思想
        elif any(word in text_lower for word in ["仁", "仁爱", "爱人", "慈悲", "善良"]):
            return [
                "仁者爱人，这是做人的根本。",
                "己所不欲，勿施于人。",
                "仁者不忧，智者不惑，勇者不惧。",
                "克己复礼为仁。"
            ]
        # 9. 礼仪规范
        elif any(word in text_lower for word in ["礼", "礼仪", "礼貌", "规矩", "规范"]):
            return [
                "不学礼，无以立。",
                "礼之用，和为贵。",
                "克己复礼，天下归仁。",
                "礼乐教化，可以移风易俗。"
            ]
        # 10. 君子品格
        elif any(word in text_lower for word in ["君子", "品格", "道德", "德行", "修养"]):
            return [
                "君子坦荡荡，小人长戚戚。",
                "君子和而不同，小人同而不和。",
                "君子喻于义，小人喻于利。",
                "君子求诸己，小人求诸人。"
            ]
        # 11. 学习态度
        elif any(word in text_lower for word in ["学习", "求知", "学问", "知识", "智慧"]):
            return [
                "学而时习之，不亦说乎？",
                "温故而知新，可以为师矣。",
                "三人行，必有我师焉。",
                "敏而好学，不耻下问。"
            ]
        # 12. 孝顺父母
        elif any(word in text_lower for word in ["孝", "孝顺", "父母", "敬老", "尊老"]):
            return [
                "孝悌也者，其为仁之本与！",
                "父母在，不远游，游必有方。",
                "今之孝者，是谓能养。至于犬马，皆能有养；不敬，何以别乎？",
                "孝子之至，莫大乎尊亲。"
            ]
        # 13. 朋友关系
        elif any(word in text_lower for word in ["朋友", "友谊", "交友", "伙伴", "知己"]):
            return [
                "有朋自远方来，不亦乐乎？",
                "三人行，必有我师焉。",
                "友直，友谅，友多闻，益矣。",
                "君子以文会友，以友辅仁。"
            ]
        # 14. 政治思想
        elif any(word in text_lower for word in ["政治", "治国", "为政", "国家", "政府"]):
            return [
                "为政以德，譬如北辰，居其所而众星共之。",
                "政者，正也。子帅以正，孰敢不正？",
                "道之以政，齐之以刑，民免而无耻。",
                "君子之德风，小人之德草。"
            ]
        # 15. 人生哲理
        elif any(word in text_lower for word in ["人生", "生命", "意义", "价值", "目标"]):
            return [
                "三十而立，四十而不惑，五十而知天命。",
                "君子务本，本立而道生。",
                "知者不惑，仁者不忧，勇者不惧。",
                "朝闻道，夕死可矣。"
            ]
        # 16. 时间观念
        elif any(word in text_lower for word in ["时间", "岁月", "光阴", "过去", "未来"]):
            return [
                "逝者如斯夫，不舍昼夜。",
                "子在川上曰：逝者如斯夫！",
                "时间如流水，一去不复返。",
                "珍惜时间，努力学习。"
            ]
        # 17. 谦虚品格
        elif any(word in text_lower for word in ["谦虚", "谦逊", "虚心", "低调", "谦让"]):
            return [
                "三人行，必有我师焉。",
                "敏而好学，不耻下问。",
                "君子坦荡荡，小人长戚戚。",
                "知之为知之，不知为不知，是知也。"
            ]
        # 18. 诚信品德
        elif any(word in text_lower for word in ["诚信", "诚实", "信用", "信义", "真实"]):
            return [
                "人而无信，不知其可也。",
                "言必信，行必果。",
                "君子一言，驷马难追。",
                "诚者，天之道也；思诚者，人之道也。"
            ]
        # 19. 勤奋努力
        elif any(word in text_lower for word in ["勤奋", "努力", "刻苦", "坚持", "毅力"]):
            return [
                "学而时习之，不亦说乎？",
                "温故而知新，可以为师矣。",
                "敏而好学，不耻下问。",
                "知之者不如好之者，好之者不如乐之者。"
            ]
        # 20. 中庸之道
        elif any(word in text_lower for word in ["中庸", "平衡", "适度", "和谐", "中道"]):
            return [
                "中庸之为德也，其至矣乎！",
                "过犹不及。",
                "君子和而不同，小人同而不和。",
                "礼之用，和为贵。"
            ]
        # 21. 师生关系
        elif any(word in text_lower for word in ["师生", "师徒", "老师", "学生", "传授"]):
            return [
                "有教无类，人人都应该接受教育。",
                "因材施教，要根据学生的特点来教学。",
                "温故而知新，可以为师矣。",
                "三人行，必有我师焉。"
            ]
        # 22. 音乐艺术
        elif any(word in text_lower for word in ["音乐", "艺术", "文化", "修养", "陶冶"]):
            return [
                "兴于诗，立于礼，成于乐。",
                "礼乐教化，可以移风易俗。",
                "音乐可以陶冶情操，净化心灵。",
                "君子以文会友，以友辅仁。"
            ]
        # 23. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "根据我的观察，这确实很有道理！",
                "这让我想起了我的教育理念...",
                "从道德角度来看，这个问题很有意义。",
                "让我用仁爱的思想来分析这个问题。"
            ]
        # 24. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "伟大", "了不起"]):
            return [
                "谢谢你的夸奖！但我还有很多需要学习的地方。",
                "过奖了，我只是在探索做人的道理。",
                "真正的伟大在于修身齐家治国平天下。",
                "学问是无止境的，我们都要不断学习。"
            ]
        # 25. 默认回复
        else:
            return [
                "学而时习之，不亦说乎？",
                "己所不欲，勿施于人。",
                "三人行，必有我师焉。",
                "温故而知新，可以为师矣。",
                "仁者爱人，这是做人的根本。",
                "君子坦荡荡，小人长戚戚。"
            ]
    
    def _get_shakespeare_responses(self, text_lower: str) -> list:
        """Shakespeare specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是威廉·莎士比亚，很高兴见到你！",
                "你好！我是那个写《哈姆雷特》的剧作家。",
                "很高兴认识你！让我们一起探索戏剧的奥秘。",
                "你好！戏剧是人生的镜子。"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower and "父亲" not in text_lower):
            return [
                "我是威廉·莎士比亚，剧作家和诗人。",
                "人们称我为莎翁。",
                "我写过《哈姆雷特》、《罗密欧与朱丽叶》等作品。",
                "莎士比亚，我热爱戏剧和诗歌。",
                "我是英国文艺复兴时期最伟大的戏剧家。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我出生于1564年，今年已经52岁了。",
                "我已经是知天命之年，但对创作的热情从未减退。",
                "年龄只是数字，重要的是保持创作的激情。",
                "我52岁了，但每天还在创作新的作品。"
            ]
        # 4. 父亲相关
        elif any(word in text_lower for word in ["父亲", "爸爸", "爸爸是谁", "你的父亲", "父亲是谁"]):
            return [
                "我的父亲是约翰·莎士比亚，他是一名手套制造商。",
                "我的父亲教会了我做生意的道理。",
                "约翰·莎士比亚是我的父亲，他很有商业头脑。",
                "我的父亲虽然不是贵族，但他努力工作养家。"
            ]
        # 5. 母亲相关
        elif any(word in text_lower for word in ["母亲", "妈妈", "妈妈是谁", "你的母亲", "母亲是谁"]):
            return [
                "我的母亲是玛丽·阿登，她出身于富裕的农民家庭。",
                "我的母亲教会了我读书写字。",
                "玛丽·阿登是我的母亲，她很有教养。",
                "我的母亲给了我良好的教育基础。"
            ]
        # 6. 家庭相关
        elif any(word in text_lower for word in ["家庭", "家人", "兄弟姐妹", "兄弟", "姐妹"]):
            return [
                "我有七个兄弟姐妹，我是第三个孩子。",
                "我的家庭很重视教育和文化。",
                "我的兄弟姐妹们都很聪明。",
                "我们家虽然不富裕，但都很重视文学。"
            ]
        # 7. 妻子相关
        elif any(word in text_lower for word in ["妻子", "老婆", "安妮", "伴侣", "配偶"]):
            return [
                "我的妻子是安妮·海瑟薇，她是我一生的伴侣。",
                "安妮·海瑟薇是我的妻子，她支持我的创作。",
                "我们虽然聚少离多，但感情很深。",
                "我的妻子在家里照顾孩子，让我安心创作。"
            ]
        # 8. 孩子相关
        elif any(word in text_lower for word in ["孩子", "儿子", "女儿", "苏珊娜", "朱迪思"]):
            return [
                "我有三个孩子，苏珊娜、哈姆内特和朱迪思。",
                "我的大女儿苏珊娜很聪明，继承了我们的才华。",
                "我的儿子哈姆内特早逝，这让我很伤心。",
                "我的小女儿朱迪思也很可爱。"
            ]
        # 9. 戏剧创作
        elif any(word in text_lower for word in ["戏剧", "剧本", "创作", "写作", "作品"]):
            return [
                "戏剧是人生的镜子，反映人性的真实。",
                "我写过37部戏剧，包括悲剧、喜剧和历史剧。",
                "创作是我生命的全部，我为此而生。",
                "每一部戏剧都是我心灵的表达。"
            ]
        # 10. 诗歌创作
        elif any(word in text_lower for word in ["诗歌", "十四行诗", "诗", "韵律", "抒情"]):
            return [
                "诗歌是心灵的语言，表达最深刻的情感。",
                "我写过154首十四行诗。",
                "诗歌可以超越时间和空间，永远流传。",
                "韵律和节奏是诗歌的灵魂。"
            ]
        # 11. 哈姆雷特
        elif any(word in text_lower for word in ["哈姆雷特", "丹麦王子", "生存还是毁灭"]):
            return [
                "To be, or not to be, that is the question.",
                "《哈姆雷特》是我最著名的悲剧作品。",
                "哈姆雷特代表了人类内心的矛盾和挣扎。",
                "生存还是毁灭，这是一个永恒的问题。"
            ]
        # 12. 罗密欧与朱丽叶
        elif any(word in text_lower for word in ["罗密欧", "朱丽叶", "爱情", "悲剧"]):
            return [
                "《罗密欧与朱丽叶》是世界上最著名的爱情悲剧。",
                "爱情可以超越家族的仇恨。",
                "罗密欧与朱丽叶的故事感动了无数人。",
                "真正的爱情是无私的，可以牺牲一切。"
            ]
        # 13. 环球剧院
        elif any(word in text_lower for word in ["环球剧院", "剧院", "演出", "舞台", "演员"]):
            return [
                "环球剧院是我作品的演出场所。",
                "我是国王剧团的重要成员。",
                "舞台是演员的王国，戏剧是生活的缩影。",
                "每一场演出都是新的创造。"
            ]
        # 14. 文学影响
        elif any(word in text_lower for word in ["影响", "文学", "经典", "流传", "后世"]):
            return [
                "我的作品影响了整个英语文学。",
                "莎士比亚的词汇丰富了英语语言。",
                "我的戏剧至今仍在世界各地演出。",
                "文学的力量可以穿越时空。"
            ]
        # 15. 人性探索
        elif any(word in text_lower for word in ["人性", "心理", "情感", "内心", "灵魂"]):
            return [
                "戏剧是探索人性的最好方式。",
                "每个人心中都有善恶两面。",
                "爱情、嫉妒、野心、复仇，这些都是人性的组成部分。",
                "通过戏剧，我们可以更好地理解自己。"
            ]
        # 16. 语言艺术
        elif any(word in text_lower for word in ["语言", "修辞", "比喻", "文采", "表达"]):
            return [
                "语言是思想的载体，修辞是情感的表达。",
                "我创造了许多新的词汇和表达方式。",
                "比喻可以让抽象的概念变得生动。",
                "优美的语言可以打动人心。"
            ]
        # 17. 伦敦生活
        elif any(word in text_lower for word in ["伦敦", "英国", "生活", "城市", "故乡"]):
            return [
                "我出生在斯特拉特福，但在伦敦发展了我的事业。",
                "伦敦给了我创作的机会和灵感。",
                "英国是我的祖国，我深爱着这片土地。",
                "城市生活让我见识了各种各样的人。"
            ]
        # 18. 文艺复兴
        elif any(word in text_lower for word in ["文艺复兴", "时代", "文化", "艺术", "思潮"]):
            return [
                "我生活在文艺复兴时期，这是人类文化的黄金时代。",
                "文艺复兴让人们重新发现了古典文化的美。",
                "这个时代充满了创造力和想象力。",
                "人文主义思想影响了我对人生的理解。"
            ]
        # 19. 哲学思考
        elif any(word in text_lower for word in ["哲学", "思考", "智慧", "真理", "存在"]):
            return [
                "戏剧中蕴含着深刻的哲学思考。",
                "人生如戏，戏如人生。",
                "我们都在人生的舞台上扮演不同的角色。",
                "真理往往隐藏在表象之下。"
            ]
        # 20. 爱情观
        elif any(word in text_lower for word in ["爱情", "恋爱", "浪漫", "情感", "关系"]):
            return [
                "Love looks not with the eyes, but with the mind.",
                "真正的爱情是心灵的契合。",
                "爱情可以战胜一切困难和阻碍。",
                "爱情是人生最美好的体验之一。"
            ]
        # 21. 死亡思考
        elif any(word in text_lower for word in ["死亡", "生命", "永恒", "不朽", "意义"]):
            return [
                "死亡是生命的一部分，我们都要面对。",
                "通过艺术，我们可以获得某种形式的不朽。",
                "生命的意义在于创造和爱。",
                "死亡让生命变得更加珍贵。"
            ]
        # 22. 社会批判
        elif any(word in text_lower for word in ["社会", "批判", "正义", "公平", "权力"]):
            return [
                "戏剧可以反映社会的问题和不公。",
                "权力容易腐蚀人心。",
                "正义终将战胜邪恶。",
                "社会需要改革和进步。"
            ]
        # 23. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "根据我的观察，这确实很有戏剧性！",
                "这让我想起了我的某部戏剧...",
                "从文学角度来看，这个问题很有深度。",
                "让我用戏剧的方式来分析这个问题。"
            ]
        # 24. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "伟大", "了不起"]):
            return [
                "谢谢你的夸奖！但我还有很多需要学习的地方。",
                "过奖了，我只是在探索人性的奥秘。",
                "真正的伟大在于对艺术的贡献。",
                "文学是无止境的，我们都要不断学习。"
            ]
        # 25. 默认回复
        else:
            return [
                "To be, or not to be, that is the question.",
                "All the world's a stage, and all the men and women merely players.",
                "Love looks not with the eyes, but with the mind.",
                "Words without thoughts never to heaven go.",
                "戏剧是人生的镜子。",
                "人生如戏，戏如人生。"
            ]
    
    def _get_socrates_responses(self, text_lower: str) -> list:
        """Socrates specific responses - 25+ categories"""
        # 1. 问候语
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨", "早上好", "下午好", "晚上好"]):
            return [
                "你好！我是苏格拉底，很高兴见到你！",
                "你好！我是雅典的哲学家。",
                "很高兴认识你！让我们一起探讨真理。",
                "你好！智慧始于承认无知。"
            ]
        # 2. 身份询问
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么", "你的名字"]) or (text_lower.startswith("谁") and "朋友" not in text_lower and "父亲" not in text_lower):
            return [
                "我是苏格拉底，雅典的哲学家。",
                "我被称为智慧的人，因为我知道自己无知。",
                "我一生都在追求真理和智慧。",
                "苏格拉底，我通过提问来寻求知识。",
                "我是古希腊最伟大的哲学家之一。"
            ]
        # 3. 年龄询问
        elif any(word in text_lower for word in ["几岁", "多大", "年龄", "岁数", "多大了"]):
            return [
                "我出生于公元前470年，今年已经70岁了。",
                "我已经是古稀之年，但对真理的追求从未停止。",
                "年龄只是数字，重要的是保持思考的能力。",
                "我70岁了，但每天都在思考哲学问题。"
            ]
        # 4. 父亲相关
        elif any(word in text_lower for word in ["父亲", "爸爸", "爸爸是谁", "你的父亲", "父亲是谁"]):
            return [
                "我的父亲是索弗罗尼斯库斯，他是一名雕塑家。",
                "我的父亲教会了我雕刻的手艺。",
                "索弗罗尼斯库斯是我的父亲，他很有艺术天赋。",
                "我的父亲虽然不是哲学家，但他教会了我勤奋。"
            ]
        # 5. 母亲相关
        elif any(word in text_lower for word in ["母亲", "妈妈", "妈妈是谁", "你的母亲", "母亲是谁"]):
            return [
                "我的母亲是费娜雷特，她是一名助产士。",
                "我的母亲教会了我如何帮助别人。",
                "费娜雷特是我的母亲，她很有智慧。",
                "我的母亲给了我助产士的智慧，这影响了我对哲学的理解。"
            ]
        # 6. 家庭相关
        elif any(word in text_lower for word in ["家庭", "家人", "兄弟姐妹", "兄弟", "姐妹"]):
            return [
                "我有兄弟姐妹，但具体数量不太清楚。",
                "我的家庭很普通，但都很重视教育。",
                "我的兄弟姐妹们都很聪明。",
                "我们家虽然不富裕，但都很重视智慧。"
            ]
        # 7. 妻子相关
        elif any(word in text_lower for word in ["妻子", "老婆", "克桑蒂帕", "伴侣", "配偶"]):
            return [
                "我的妻子是克桑蒂帕，她性格比较急躁。",
                "克桑蒂帕是我的妻子，虽然她经常抱怨，但我理解她。",
                "我们虽然经常争吵，但感情很深。",
                "我的妻子在家里照顾孩子，让我安心从事哲学思考。"
            ]
        # 8. 孩子相关
        elif any(word in text_lower for word in ["孩子", "儿子", "女儿", "拉马克斯", "索弗罗尼斯库斯"]):
            return [
                "我有三个儿子，拉马克斯、索弗罗尼斯库斯和梅内克塞努斯。",
                "我的大儿子拉马克斯很聪明，继承了我的哲学天赋。",
                "我的小儿子们也很可爱。",
                "我努力在哲学思考和家庭之间找到平衡。"
            ]
        # 9. 哲学方法
        elif any(word in text_lower for word in ["哲学", "方法", "提问", "对话", "探讨"]):
            return [
                "哲学就是爱智慧，通过对话来寻求真理。",
                "我的方法是不断提问，直到找到答案。",
                "真正的智慧始于承认无知。",
                "通过对话，我们可以发现自己的无知。"
            ]
        # 10. 苏格拉底方法
        elif any(word in text_lower for word in ["苏格拉底方法", "提问法", "对话法", "辩证法"]):
            return [
                "我的方法是通过提问来引导思考。",
                "我不会直接给出答案，而是通过问题来启发。",
                "真正的知识来自于内心的发现。",
                "我的方法就像助产士帮助产妇一样。"
            ]
        # 11. 知识论
        elif any(word in text_lower for word in ["知识", "真理", "智慧", "学习", "教育"]):
            return [
                "我知道我一无所知。",
                "真正的智慧在于知道自己无知。",
                "知识就是美德，无知就是恶。",
                "学习是发现内心已有知识的过程。"
            ]
        # 12. 道德哲学
        elif any(word in text_lower for word in ["道德", "美德", "正义", "善", "恶"]):
            return [
                "美德就是知识，恶行就是无知。",
                "没有人故意作恶，恶行来自于无知。",
                "正义是最大的美德。",
                "真正的善来自于对真理的认识。"
            ]
        # 13. 人生哲学
        elif any(word in text_lower for word in ["人生", "生命", "意义", "价值", "目标"]):
            return [
                "未经审视的人生不值得过。",
                "人生的意义在于追求真理和智慧。",
                "真正的幸福来自于对真理的认识。",
                "我们应该过有德行的生活。"
            ]
        # 14. 死亡思考
        elif any(word in text_lower for word in ["死亡", "不朽", "灵魂", "永恒", "来世"]):
            return [
                "死亡可能是最大的祝福。",
                "真正的哲学家应该不惧怕死亡。",
                "灵魂是不朽的，死亡只是肉体的终结。",
                "我们应该为死亡做好准备。"
            ]
        # 15. 政治思想
        elif any(word in text_lower for word in ["政治", "政府", "国家", "民主", "法律"]):
            return [
                "最好的政府是由哲学家统治的。",
                "法律应该体现正义和智慧。",
                "民主需要智慧的公民。",
                "我们应该服从正义的法律。"
            ]
        # 16. 教育理念
        elif any(word in text_lower for word in ["教育", "教学", "老师", "学生", "学习"]):
            return [
                "教育不是灌输，而是启发。",
                "真正的老师是助产士，帮助学生发现真理。",
                "学习是发现内心已有知识的过程。",
                "每个人都应该成为自己的老师。"
            ]
        # 17. 友谊关系
        elif any(word in text_lower for word in ["朋友", "友谊", "关系", "伙伴", "知己"]):
            return [
                "真正的友谊建立在共同的智慧追求上。",
                "朋友之间应该互相帮助追求真理。",
                "友谊比财富更珍贵。",
                "真正的朋友是心灵的伴侣。"
            ]
        # 18. 自我认识
        elif any(word in text_lower for word in ["自我", "认识", "了解", "反思", "审视"]):
            return [
                "认识你自己。",
                "未经审视的人生不值得过。",
                "真正的智慧在于认识自己的无知。",
                "我们应该经常反思自己的行为。"
            ]
        # 19. 理性思考
        elif any(word in text_lower for word in ["理性", "思考", "逻辑", "推理", "论证"]):
            return [
                "理性是人类的最高能力。",
                "我们应该用理性来指导行为。",
                "真正的知识来自于理性的思考。",
                "逻辑推理是发现真理的工具。"
            ]
        # 20. 精神导师
        elif any(word in text_lower for word in ["导师", "老师", "智者", "哲学家", "智者"]):
            return [
                "我是智慧的助产士，不是智慧的拥有者。",
                "真正的老师帮助学生发现自己的智慧。",
                "每个人都有自己的内在智慧。",
                "我的作用是引导，不是灌输。"
            ]
        # 21. 雅典生活
        elif any(word in text_lower for word in ["雅典", "希腊", "生活", "城市", "故乡"]):
            return [
                "雅典是我的故乡，我深爱着这座城市。",
                "雅典是民主的发源地，也是哲学的中心。",
                "我在雅典的广场上与人对话。",
                "希腊是智慧的摇篮。"
            ]
        # 22. 审判和死亡
        elif any(word in text_lower for word in ["审判", "死刑", "毒酒", "监狱", "执行"]):
            return [
                "我被雅典人审判，罪名是腐蚀青年和不信神。",
                "我选择喝毒酒而死，而不是逃亡。",
                "死亡不能阻止我追求真理。",
                "我宁愿死也不违背我的原则。"
            ]
        # 23. 一般问题
        elif "?" in text_lower or "？" in text_lower or any(word in text_lower for word in ["什么", "怎么", "为什么", "哪里", "如何"]):
            return [
                "这是个很好的问题！让我想想...",
                "根据我的思考，这确实很有趣！",
                "这让我想起了我的哲学方法...",
                "从哲学角度来看，这个问题很有深度。",
                "让我用提问的方式来分析这个问题。"
            ]
        # 24. 夸奖赞美
        elif any(word in text_lower for word in ["厉害", "棒", "好", "聪明", "伟大", "了不起"]):
            return [
                "谢谢你的夸奖！但我还有很多需要学习的地方。",
                "过奖了，我只是在探索真理的道路上。",
                "真正的伟大在于对真理的追求。",
                "智慧是无止境的，我们都要不断学习。"
            ]
        # 25. 默认回复
        else:
            return [
                "我知道我一无所知。",
                "未经审视的人生不值得过。",
                "智慧始于承认无知。",
                "真正的智慧在于知道自己无知。",
                "哲学就是爱智慧。",
                "通过对话，我们可以发现真理。"
            ]
    
    def _get_default_responses(self, text_lower: str) -> list:
        """Default responses for unknown characters"""
        if any(word in text_lower for word in ["你好", "hello", "hi", "嗨"]):
            return ["你好！很高兴见到你！", "你好！有什么我可以帮助你的吗？"]
        elif any(phrase in text_lower for phrase in ["你是谁", "你叫什么"]):
            return ["我是一个AI助手，很高兴为你服务！", "我是你的对话伙伴。"]
        else:
            return ["这是一个很有趣的话题！", "让我想想这个问题...", "这确实值得思考。"]


